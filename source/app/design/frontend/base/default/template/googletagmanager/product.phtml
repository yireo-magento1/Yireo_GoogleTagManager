<?php
/**
 * GoogleTagManager plugin for Magento
 *
 * @package     Yireo_GoogleTagManager
 * @author      Yireo (https://www.yireo.com/)
 * @copyright   Copyright (c) 2017 Yireo (https://www.yireo.com/)
 * @license     Open Software License
 */

if ($this->isEnabled()) {

    /** @var Mage_Catalog_Model_Product $product */
    $product = $this->getProduct();

    $store = $this->getStore();
    $taxCalculation = Mage::getModel('tax/calculation');
    $request = $taxCalculation->getRateRequest(null, null, null, $store);
    $taxClassId = $product->getTaxClassId();
    $taxpercent = $taxCalculation->getRate($request->setProductClassId($taxClassId));

    if (!empty($product) && $product->getId() > 0) {

        $price = $product->getPrice();
        $specialPrice = $product->getSpecialprice();
        if (($specialPrice > 0) && ($specialPrice < $price)) {
            $price = $specialPrice;
        }
        $tax = ($price / (100 + $taxpercent)) * $taxpercent;

        $this->addAttribute('productId', $product->getId());
        $this->addAttribute('productName', $this->quoteEscape($product->getName()));
        $this->addAttribute('productSku', $this->quoteEscape($product->getSku()));
        $this->addAttribute('productPrice', number_format($price, 2));
        $this->addAttribute('productPriceExcludingTax', number_format($price - $tax, 2));
        $this->addAttribute('productTax', number_format($tax, 2));
        $this->addAttribute('productTaxRate', $taxpercent);
        $children = array();
        $child = array();
        if ($product->isConfigurable()) {
            $childProducts = Mage::getModel('catalog/product_type_configurable')->getUsedProducts(null,$product);
            foreach ($childProducts as $childProduct) {
                $child['name'] = $childProduct->getName();
                $child['id'] = $childProduct->getId();
                $child['price'] = number_format($price, 2);
                $child['sku'] = $childProduct->getSku();
                array_push($children, $child);
            }
            $this->addAttribute('productChildren', $children);
        }

        $category = $product->getCategory();
        $categoryName = (is_object($category)) ? $this->quoteEscape($category->getName()) : null;

        if (!empty($categoryName)) {
            $this->getModuleHelper()->addEcommerceData('actionField', array('list' => $categoryName));
        }

        $productData = array(
            'id' => $product->getId(),
            'name' => $this->quoteEscape($product->getName()),
            'price' => $product->getPrice(),
            'priceexcludingtax' => number_format($price - $tax, 2),
            'tax' => number_format($tax, 2),
            'taxrate' => $taxpercent,
            'brand' => $this->quoteEscape($product->getAttributeText('manufacturer')),
            'category' => $categoryName,
            'children' => $children,
        );

        $this->getModuleHelper()->addEcommerceData('detail', array($productData));
    }
}
